os:
  edit: 'nvim --server "$NVIM" --remote-tab {{filename}}'
  editAtLine: 'nvim --server "$NVIM" --remote-tab {{filename}}; [ -z "$NVIM" ] || nvim --server "$NVIM" --remote-send ":{{line}}<CR>"'
  editAtLineAndWait: 'nvim +{{line}} {{filename}}'

promptToReturnFromSubprocess: false
gui:
  showFileTree: false
  theme:
    activeBorderColor:
      - '#b4befe'
      - bold
    inactiveBorderColor:
      - '#a6adc8'
    optionsTextColor:
      - '#89b4fa'
    selectedLineBgColor:
      - '#313244'
    selectedRangeBgColor:
      - '#313244'
    cherryPickedCommitBgColor:
      - '#45475a'
    cherryPickedCommitFgColor:
      - '#b4befe'
    unstagedChangesColor:
      - '#f38ba8'
    defaultFgColor:
      - '#cdd6f4'
    searchingActiveBorderColor:
      - '#f9e2af'
git:
  paging:
    colorArg: always
    pager: delta --dark --paging=never

services:
  'gitlab.itx.de': 'gitlab:gitlab.itx.de'

customCommands:
  - key: "<c-v>"
    context: "global"
    description: "Create new conventional commit"
    prompts:
      - type: "menu"
        key: "Type"
        title: "Type of change"
        options:
          - name: "feat"
            description: "A new feature"
            value: "feat"
          - name: "fix"
            description: "A bug fix"
            value: "fix"
          - name: "chore"
            description: "Other changes that don't modify src or test files"
            value: "chore"
          - name: "build"
            description: "Changes that affect the build system or external dependencies"
            value: "build"
          - name: "ci"
            description: "Changes to CI configuration files and scripts"
            value: "ci"
          - name: "docs"
            description: "Documentation only changes"
            value: "docs"
          - name: "perf"
            description: "A code change that improves performance"
            value: "perf"
          - name: "refactor"
            description: "A code change that neither fixes a bug nor adds a feature"
            value: "refactor"
          - name: "revert"
            description: "Reverts a previous commit"
            value: "revert"
          - name: "style"
            description: "Changes that do not affect the meaning of the code"
            value: "style"
          - name: "test"
            description: "Adding missing tests or correcting existing tests"
            value: "test"
      - type: "input"
        title: "Ticket - Adds ticket number in front of message"
        key: "Ticket"
        initialValue: ""
      - type: "input"
        title: "Scope"
        key: "Scope"
        initialValue: ""
      - type: "input"
        title: "Breaking change - Add '!'"
        key: "Breaking"
        initialValue: ""
      - type: "input"
        title: "Commit Message"
        key: "Message"
        initialValue: ""
      - type: "confirm"
        key: "Confirm"
        title: "Commit"
        body: "Are you sure you want to commit?"
    command: "git commit --message '{{.Form.Type}}{{ if .Form.Scope}}({{.Form.Scope}}){{end}}{{.Form.Breaking}}: {{ if .Form.Ticket }}TRON-{{ .Form.Ticket }}{{ end }} {{.Form.Message}}'"
    loadingText: "Creating conventional commit..."
